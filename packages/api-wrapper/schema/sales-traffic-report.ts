import z from 'zod';

const AmountSchema = z.object({
	amount: z.number(),
	currencyCode: z.string(),
});
const SalesByDateSchema = z.object({
	orderedProductSales: AmountSchema,
	orderedProductSalesB2B: AmountSchema,
	unitsOrdered: z.number(),
	unitsOrderedB2B: z.number(),
	totalOrderItems: z.number(),
	totalOrderItemsB2B: z.number(),
	averageSalesPerOrderItem: AmountSchema,
	averageSalesPerOrderItemB2B: AmountSchema,
	averageUnitsPerOrderItem: z.number(),
	averageUnitsPerOrderItemB2B: z.number(),
	averageSellingPrice: AmountSchema,
	averageSellingPriceB2B: AmountSchema,
	unitsRefunded: z.number(),
	refundRate: z.number(),
	claimsGranted: z.number(),
	claimsAmount: AmountSchema,
	shippedProductSales: AmountSchema,
	unitsShipped: z.number(),
	ordersShipped: z.number(),
});
const TrafficByDateSchema = z.object({
	browserPageViews: z.number(),
	browserPageViewsB2B: z.number(),
	mobileAppPageViews: z.number(),
	mobileAppPageViewsB2B: z.number(),
	pageViews: z.number(),
	pageViewsB2B: z.number(),
	browserSessions: z.number(),
	browserSessionsB2B: z.number(),
	mobileAppSessions: z.number(),
	mobileAppSessionsB2B: z.number(),
	sessions: z.number(),
	sessionsB2B: z.number(),
	buyBoxPercentage: z.number(),
	buyBoxPercentageB2B: z.number(),
	orderItemSessionPercentage: z.number(),
	orderItemSessionPercentageB2B: z.number(),
	unitSessionPercentage: z.number(),
	unitSessionPercentageB2B: z.number(),
	averageOfferCount: z.number(),
	averageParentItems: z.number(),
	feedbackReceived: z.number(),
	negativeFeedbackReceived: z.number(),
	receivedNegativeFeedbackRate: z.number(),
});
const SalesAndTrafficByDateSchema = z.object({
	date: z.string(),
	salesByDate: SalesByDateSchema,
	trafficByDate: TrafficByDateSchema,
});
const SalesByAsinSchema = z.object({
	unitsOrdered: z.number(),
	unitsOrderedB2B: z.number(),
	orderedProductSales: AmountSchema,
	orderedProductSalesB2B: AmountSchema,
	totalOrderItems: z.number(),
	totalOrderItemsB2B: z.number(),
});
const TrafficByAsinSchema = z.object({
	browserSessions: z.number(),
	browserSessionsB2B: z.number(),
	mobileAppSessions: z.number(),
	mobileAppSessionsB2B: z.number(),
	sessions: z.number(),
	sessionsB2B: z.number(),
	browserSessionPercentage: z.number(),
	browserSessionPercentageB2B: z.number(),
	mobileAppSessionPercentage: z.number(),
	mobileAppSessionPercentageB2B: z.number(),
	sessionPercentage: z.number(),
	sessionPercentageB2B: z.number(),
	browserPageViews: z.number(),
	browserPageViewsB2B: z.number(),
	mobileAppPageViews: z.number(),
	mobileAppPageViewsB2B: z.number(),
	pageViews: z.number(),
	pageViewsB2B: z.number(),
	browserPageViewsPercentage: z.number(),
	browserPageViewsPercentageB2B: z.number(),
	mobileAppPageViewsPercentage: z.number(),
	mobileAppPageViewsPercentageB2B: z.number(),
	pageViewsPercentage: z.number(),
	pageViewsPercentageB2B: z.number(),
	buyBoxPercentage: z.number(),
	buyBoxPercentageB2B: z.number(),
	unitSessionPercentage: z.number(),
	unitSessionPercentageB2B: z.number(),
});
const SalesAndTrafficByAsinSchema = z.object({
	parentAsin: z.string(),
	childAsin: z.string(),
	salesByAsin: SalesByAsinSchema,
	trafficByAsin: TrafficByAsinSchema,
});
const ReportSpecificationSchema = z.object({
	reportType: z.string(),
	reportOptions: z.object({
		dateGranularity: z.string(),
		asinGranularity: z.string(),
	}),
	dataStartTime: z.string(),
	dataEndTime: z.string(),
	marketplaceIds: z.array(z.string()),
});
const RootSchema = z.object({
	reportSpecification: ReportSpecificationSchema,
	salesAndTrafficByDate: z.array(SalesAndTrafficByDateSchema),
	salesAndTrafficByAsin: z.array(SalesAndTrafficByAsinSchema),
});
